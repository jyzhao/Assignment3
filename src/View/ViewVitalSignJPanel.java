/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.VitalSign;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhaojiyuan
 */
public class ViewVitalSignJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewVitalSignJPanel
     */
    private VitalSignHistory vitalSignHistory;
    private Boolean isRespiratoryRateNormal = false;
    private Boolean isHeartRateNormal = false;
    private Boolean isSystolicBloodPressureNormal = false;
    private Boolean isWeightNormal = false;
    
    
    
    public ViewVitalSignJPanel(VitalSignHistory vitalSignHistory) {
        initComponents();
        this.vitalSignHistory = vitalSignHistory;
        
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)vitalSignJTable.getModel();
        
        int rowCount = vitalSignJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        
        for (VitalSign vitalSign : vitalSignHistory.getVitalSignList()) {
            Object row[] = new Object[5];
            row[0] = vitalSign;
            row[1] = vitalSign.getRespiratoryRate();
            row[2] = vitalSign.getHeartRate();
            row[3] = vitalSign.getSystolicBloodPressure();
            row[4] = vitalSign.getWeight();
            
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignJTable = new javax.swing.JTable();
        heartRateJTextField = new javax.swing.JTextField();
        systolicBloodPressureJTextField = new javax.swing.JTextField();
        weightJTextField = new javax.swing.JTextField();
        respiratoryRateJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        viewVitalSignJButton = new javax.swing.JButton();
        deleteVitalSignJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        timeAndDateJTextField = new javax.swing.JTextField();
        respiratoryRateJLabel = new javax.swing.JLabel();
        heartRateJLabel = new javax.swing.JLabel();
        systolicBloodPressureJLabel = new javax.swing.JLabel();
        weightJLabel = new javax.swing.JLabel();
        isVitalSignNormalJLabel = new javax.swing.JLabel();

        vitalSignJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time & Date", "Respiratory Rate", "Heart Rate", "Systolic Blood Pressure", "Weight (lbs)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignJTable);
        if (vitalSignJTable.getColumnModel().getColumnCount() > 0) {
            vitalSignJTable.getColumnModel().getColumn(0).setResizable(false);
            vitalSignJTable.getColumnModel().getColumn(1).setResizable(false);
            vitalSignJTable.getColumnModel().getColumn(2).setResizable(false);
            vitalSignJTable.getColumnModel().getColumn(3).setResizable(false);
            vitalSignJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setText("Create Vital Sign");

        jLabel2.setText("Respiratory Rate");

        jLabel3.setText("Heart Rate");

        jLabel4.setText("Systolic Blood Pressure");

        jLabel5.setText("Weight (lbs)");

        viewVitalSignJButton.setText("View");
        viewVitalSignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewVitalSignJButtonActionPerformed(evt);
            }
        });

        deleteVitalSignJButton.setText("Delete");
        deleteVitalSignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteVitalSignJButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Time and Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(viewVitalSignJButton)
                        .addGap(108, 108, 108)
                        .addComponent(deleteVitalSignJButton)
                        .addGap(117, 117, 117)
                        .addComponent(isVitalSignNormalJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(respiratoryRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heartRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(systolicBloodPressureJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeAndDateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(respiratoryRateJLabel)
                            .addComponent(heartRateJLabel)
                            .addComponent(systolicBloodPressureJLabel)
                            .addComponent(weightJLabel)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewVitalSignJButton)
                    .addComponent(deleteVitalSignJButton)
                    .addComponent(isVitalSignNormalJLabel))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(respiratoryRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respiratoryRateJLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(heartRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heartRateJLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systolicBloodPressureJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(systolicBloodPressureJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(weightJLabel))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(timeAndDateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewVitalSignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewVitalSignJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vitalSignJTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vitalSign = (VitalSign) vitalSignJTable.getValueAt(selectedRow, 0);

            respiratoryRateJTextField.setText(String.valueOf(vitalSign.getRespiratoryRate()));
            heartRateJTextField.setText(String.valueOf(vitalSign.getRespiratoryRate()));
            systolicBloodPressureJTextField.setText(String.valueOf(vitalSign.getSystolicBloodPressure()));
            weightJTextField.setText(String.valueOf(vitalSign.getWeight()));
            timeAndDateJTextField.setText(String.valueOf(vitalSign.getTimeAndDate()));
           
            if (vitalSign.getIsVitalSignNormal()) {
                isVitalSignNormalJLabel.setText("Normal");
            } else {
                isVitalSignNormalJLabel.setText("Abnormal");
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select vital sign !!!");
        }
     
    }//GEN-LAST:event_viewVitalSignJButtonActionPerformed

    
    private void deleteVitalSignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteVitalSignJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vitalSignJTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vitalSign = (VitalSign)vitalSignJTable.getValueAt(selectedRow, 0);
            this.vitalSignHistory.removeVitalSign(vitalSign);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select vital sign !!!");
        }
    }//GEN-LAST:event_deleteVitalSignJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteVitalSignJButton;
    private javax.swing.JLabel heartRateJLabel;
    private javax.swing.JTextField heartRateJTextField;
    private javax.swing.JLabel isVitalSignNormalJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel respiratoryRateJLabel;
    private javax.swing.JTextField respiratoryRateJTextField;
    private javax.swing.JLabel systolicBloodPressureJLabel;
    private javax.swing.JTextField systolicBloodPressureJTextField;
    private javax.swing.JTextField timeAndDateJTextField;
    private javax.swing.JButton viewVitalSignJButton;
    private javax.swing.JTable vitalSignJTable;
    private javax.swing.JLabel weightJLabel;
    private javax.swing.JTextField weightJTextField;
    // End of variables declaration//GEN-END:variables
}
